/* **********************************************************
 * Copyright (c) 2012 Google, Inc.   All rights reserved.
 * **********************************************************/

/*
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * 
 * * Redistributions of source code must retain the above copyright notice,
 *   this list of conditions and the following disclaimer.
 * 
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 * 
 * * Neither the name of Google, Inc. nor the names of its contributors may be
 *   used to endorse or promote products derived from this software without
 *   specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL GOOGLE, INC. OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
 * DAMAGE.
 */

/**
***************************************************************************
***************************************************************************
\page page_drsyscall Dr. Syscall: System Call Monitoring Extension

The \p drsyscall DynamoRIO Extension provides system call monitoring
features beyond the basics in the DynamoRIO API itself.  \p drsyscall is
part of the Dr. Memory Framework.

 - \ref sec_drsyscall_setup
 - \ref sec_drsyscall_events
 - \ref sec_drsyscall_API

\section sec_drsyscall_setup Setup

To use \p drsyscall with your client, first locate the Dr. Memory
Framework.  Then use the standard method of using an Extension with the
name \p drmf_drsyscall.  The two steps will look like this in your client's
\p CMakeLists.txt file:

\code
find_package(DrMemoryFramework)
use_DynamoRIO_extension(clientname drmf_drsyscall)
\endcode

That will automatically set up the include path and library dependence.

Your client must call \p drsys_init() prior to accessing any API
routines \p drsyscall, and should call \p drsys_exit() at process exit
time.

\section sec_drsyscall_events Event Replacement

\p drsyscall uses the \p drmgr Extension to ensure its events occur at the
proper order.  A user of \p drsyscall must use the \p drmgr versions of the
basic block and thread events.

\section sec_drsyscall_API Dr. Syscall API

\p drsyscall provides the following key features:

 -# System call name to number querying
 -# System call number to name querying
 -# System call argument type iteration
 -# System call argument value iteration
 -# Query whether a system call return value indicates success
 -# Iteration over every memory region read or written by a system call
 -# Storage of system call argument values for access in post-syscall events

Many features of \p drsyscall operate on the current in-progress system
call.  The client should register for the pre- and post-syscall events
through \p drmgr.  In those events, the client can then invoke \p drsyscall
API routines to query the current system call.  The client should normally
use a default priority for its system call events to ensure that \p
drsyscall's per-system-call initialization is in place prior to invoking \p
drsyscall functions.

If the client wishes to modify the machine context, system call parameters,
or system call return value, the client must use a separate system
call event that is ordered prior to DRMGR_PRIORITY_PRESYS_DRSYS or
DRMGR_PRIORITY_POSTSYS_DRSYS.

The client can statically iterate over the types of the parameters to every
system call in its dr_init() routine and decide which system calls it wants
to monitor.  It should then request that \p drsyscall filter those system
calls.  Only filtered system calls can be dynamically queried.

*/
